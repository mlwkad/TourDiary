{"version":3,"file":"u-waterfall.js","sources":["uni_modules/uview-plus/components/u-waterfall/u-waterfall.vue","../../uniapp/HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RDovdW5pYXBwUHJvamVjdC_ml4XmuLjml6XorrB1bmlhcHAvdW5pX21vZHVsZXMvdXZpZXctcGx1cy9jb21wb25lbnRzL3Utd2F0ZXJmYWxsL3Utd2F0ZXJmYWxsLnZ1ZQ"],"sourcesContent":["<template>\r\n    <view class=\"u-waterfall\">\r\n        <view ref=\"u-left-column\" id=\"u-left-column\" class=\"u-column\">\r\n            <slot name=\"left\" :leftList=\"leftList\"></slot>\r\n        </view>\r\n        <view ref=\"u-right-column\" id=\"u-right-column\" class=\"u-column\">\r\n            <slot name=\"right\" :rightList=\"rightList\"></slot>\r\n        </view>\r\n    </view>\r\n</template>\r\n\r\n<script>\r\n    /**\r\n     * waterfall 瀑布流\r\n     * @description 这是一个瀑布流形式的组件，内容分为左右两列，结合uview的懒加载组件效果更佳。相较于某些只是奇偶数左右分别，或者没有利用vue作用域插槽的做法，uview的瀑布流实现了真正的 组件化，搭配LazyLoad 懒加载和loadMore 加载更多组件，让您开箱即用，眼前一亮。\r\n     * @tutorial https://uview-plus.jiangruyi.com/components/waterfall.html\r\n     * @property {Array} flow-list 用于渲染的数据\r\n     * @property {String Number} add-time 单条数据添加到队列的时间间隔，单位ms，见上方注意事项说明（默认200）\r\n     * @example <u-waterfall :flowList=\"flowList\"></u-waterfall>\r\n     */\r\n    import { mpMixin } from '../../libs/mixin/mpMixin';\r\n\timport { mixin } from '../../libs/mixin/mixin';\r\n    export default {\r\n        name: \"u-waterfall\",\r\n        props: {\r\n            // #ifdef VUE2\r\n            value: {\r\n                // 瀑布流数据\r\n                type: Array,\r\n                required: true,\r\n                default: function() {\r\n                    return [];\r\n                }\r\n            },\r\n            // #endif\r\n            // #ifdef VUE3\r\n            modelValue: {\r\n                // 瀑布流数据\r\n                type: Array,\r\n                required: true,\r\n                default: function() {\r\n                    return [];\r\n                }\r\n            },\r\n            // #endif\r\n            // 每次向结构插入数据的时间间隔，间隔越长，越能保证两列高度相近，但是对用户体验越不好\r\n            // 单位ms\r\n            addTime: {\r\n                type: [Number, String],\r\n                default: 200\r\n            },\r\n            // id值，用于清除某一条数据时，根据此idKey名称找到并移除，如数据为{idx: 22, name: 'lisa'}\r\n            // 那么该把idKey设置为idx\r\n            idKey: {\r\n                type: String,\r\n                default: 'id'\r\n            }\r\n        },\r\n        mixins: [mpMixin, mixin],\r\n        data() {\r\n            return {\r\n                leftList: [],\r\n                rightList: [],\r\n                tempList: [],\r\n                children: []\r\n            }\r\n        },\r\n        watch: {\r\n            copyFlowList(nVal, oVal) {\r\n                if (!nVal || nVal.length == 0) {\r\n                    this.clear(false);\r\n                    // console.log('clear');\r\n                } else {\r\n                    // 取差值，即这一次数组变化新增的部分\r\n                    let startIndex = Array.isArray(oVal) && oVal.length > 0 ? oVal.length : 0;\r\n                    // 拼接上原有数据\r\n                    this.tempList = this.tempList.concat(this.cloneData(nVal.slice(startIndex)));\r\n                    this.splitData();\r\n                }\r\n            }\r\n        },\r\n        mounted() {\r\n            this.tempList = this.cloneData(this.copyFlowList);\r\n            this.splitData();\r\n        },\r\n        computed: {\r\n            // 破坏flowList变量的引用，否则watch的结果新旧值是一样的\r\n            copyFlowList() {\r\n                // #ifdef VUE3\r\n                if (!this.modelValue || this.modelValue.length == 0) {\r\n                    this.clear(false);\r\n                    // console.log('clear');\r\n                    return [];\r\n                } else {\r\n                    return this.cloneData(this.modelValue);\r\n                }\r\n                // #endif\r\n                // #ifdef VUE2\r\n                return this.cloneData(this.value);\r\n                // #endif\r\n            }\r\n        },\r\n        emits: ['update:modelValue'],\r\n        methods: {\r\n            async splitData() {\r\n                if (!this.tempList.length) return;\r\n                let leftRect = await this.$uGetRect('#u-left-column');\r\n                let rightRect = await this.$uGetRect('#u-right-column');\r\n                // 如果左边小于或等于右边，就添加到左边，否则添加到右边\r\n                let item = this.tempList[0];\r\n                // 解决多次快速上拉后，可能数据会乱的问题，因为经过上面的两个await节点查询阻塞一定时间，加上后面的定时器干扰\r\n                // 数组可能变成[]，导致此item值可能为undefined\r\n                if (!item) return;\r\n                if (leftRect.height < rightRect.height) {\r\n                    this.leftList.push(item);\r\n                } else if (leftRect.height > rightRect.height) {\r\n                    this.rightList.push(item);\r\n                } else {\r\n                    // 这里是为了保证第一和第二张添加时，左右都能有内容\r\n                    // 因为添加第一张，实际队列的高度可能还是0，这时需要根据队列元素长度判断下一个该放哪边\r\n                    if (this.leftList.length <= this.rightList.length) {\r\n                        this.leftList.push(item);\r\n                    } else {\r\n                        this.rightList.push(item);\r\n                    }\r\n                }\r\n                // 移除临时列表的第一项\r\n                this.tempList.splice(0, 1);\r\n                // 如果临时数组还有数据，继续循环\r\n                if (this.tempList.length) {\r\n                    setTimeout(() => {\r\n                        this.splitData();\r\n                    }, this.addTime)\r\n                }\r\n            },\r\n            // 复制而不是引用对象和数组\r\n            cloneData(data) {\r\n                return JSON.parse(JSON.stringify(data));\r\n            },\r\n            // 清空数据列表\r\n            clear(bak = true) {\r\n                this.leftList = [];\r\n                this.rightList = [];\r\n                // 同时清除父组件列表中的数据\r\n                if (bak) {\r\n                    // #ifdef VUE2\r\n                    this.$emit('input', []);\r\n                    // #endif\r\n                    // #ifdef VUE3\r\n                    this.$emit('update:modelValue', []);\r\n                    // #endif\r\n                }\r\n                this.tempList = [];\r\n            },\r\n            // 清除某一条指定的数据，根据id实现\r\n            remove(id) {\r\n                // 如果findIndex找不到合适的条件，就会返回-1\r\n                let index = -1;\r\n                index = this.leftList.findIndex(val => val[this.idKey] == id);\r\n                if (index != -1) {\r\n                    // 如果index不等于-1，说明已经找到了要找的id，根据index索引删除这一条数据\r\n                    this.leftList.splice(index, 1);\r\n                } else {\r\n                    // 同理于上方面的方法\r\n                    index = this.rightList.findIndex(val => val[this.idKey] == id);\r\n                    if (index != -1) this.rightList.splice(index, 1);\r\n                }\r\n                // 同时清除父组件的数据中的对应id的条目\r\n                // #ifdef VUE2\r\n                index = this.value.findIndex(val => val[this.idKey] == id);\r\n                if (index != -1) this.$emit('input', this.value.splice(index, 1));\r\n                // #endif\r\n                // #ifdef VUE3\r\n                index = this.modelValue.findIndex(val => val[this.idKey] == id);\r\n                if (index != -1) this.$emit('update:modelValue', this.modelValue.splice(index, 1));\r\n                // #endif\r\n            },\r\n            // 修改某条数据的某个属性\r\n            modify(id, key, value) {\r\n                // 如果findIndex找不到合适的条件，就会返回-1\r\n                let index = -1;\r\n                index = this.leftList.findIndex(val => val[this.idKey] == id);\r\n                if (index != -1) {\r\n                    // 如果index不等于-1，说明已经找到了要找的id，修改对应key的值\r\n                    this.leftList[index][key] = value;\r\n                } else {\r\n                    // 同理于上方面的方法\r\n                    index = this.rightList.findIndex(val => val[this.idKey] == id);\r\n                    if (index != -1) this.rightList[index][key] = value;\r\n                }\r\n                // 修改父组件的数据中的对应id的条目\r\n                // #ifdef VUE2\r\n                index = this.value.findIndex(val => val[this.idKey] == id);\r\n                // #endif\r\n                // #ifdef VUE3\r\n                index = this.modelValue.findIndex(val => val[this.idKey] == id);\r\n                // #endif\r\n                if (index != -1) {\r\n                    // 首先复制一份value的数据\r\n                    // #ifdef VUE2\r\n                    let data = this.cloneData(this.value);\r\n                    // #endif\r\n                    // #ifdef VUE3\r\n                    let data = this.cloneData(this.modelValue);\r\n                    // #endif\r\n                    // 修改对应索引的key属性的值为value\r\n                    data[index][key] = value;\r\n                    // 修改父组件通过v-model绑定的变量的值\r\n                    // #ifdef VUE2\r\n                    this.$emit('input', data);\r\n                    // #endif\r\n                    // #ifdef VUE3\r\n                    this.$emit('update:modelValue', data);\r\n                    // #endif\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n    @import \"../../libs/css/components.scss\";\r\n\r\n    .u-waterfall {\r\n        @include flex;\r\n        flex-direction: row;\r\n        align-items: flex-start;\r\n    }\r\n\r\n    .u-column {\r\n        @include flex;\r\n        flex: 1;\r\n        flex-direction: column;\r\n        overflow: hidden;\r\n        /* #ifndef APP-NVUE */\r\n        height: 100%;\r\n        /* #endif */\r\n    }\r\n\r\n    .u-image {\r\n        /* #ifndef APP-NVUE */\r\n        max-width: 100%;\r\n        /* #endif */\r\n    }\r\n</style>\r\n","import Component from 'D:/uniappProject/旅游日记uniapp/uni_modules/uview-plus/components/u-waterfall/u-waterfall.vue'\nwx.createComponent(Component)"],"names":["mpMixin","mixin"],"mappings":"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"}